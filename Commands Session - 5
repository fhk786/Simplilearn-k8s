 kubectl get jobs -A
 nano job.yaml
 kubectl apply -f job.yaml 
 nano job.yaml
 kubectl apply -f job.yaml 
 nano job.yaml
 kubectl apply -f job.yaml 
 kubectl get jobs 
 kubectl get pods
 kubectl describe jobs 
 kubectl get pods
 kubectl describe pod jobs-hello-2pbgr  
 nano job.yaml
 kubectl replace -f job.yaml --force
 kubectl get pods -w
 kubectl get pods 
 kubectl get jobs
 kubectl replace -f job.yaml --force
 kubectl get jobs
 kubectl get jobs -w
 kubectl describe jobs
 kubectl get jobs -o yaml
 kubectl get jobs 
 kubectl get pods
 kubectl logs jobs-hello-56d6b
 kubectl get jobs -o yaml
 clear
 cat /etc/crontab 
 kubectl get cronjob
 kubectl get job
 kubectl delete jobs jobs-hello
 nano cronjob.yaml
 kubectl apply -f cronjob.yaml 
 kubectl get cronjob
 kubectl get job
 kubectl get pod
 kubectl logs cronjob-hello-28453584-ffspv 
 kubectl get job
 kubectl get job -w
 cat cronjob.yaml 
 nano cronjob.yaml 
 kubectl apply -f cronjob.yaml 
 nano cronjob.yaml 


apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob-hello
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      ttlSecondsAfterFinished:  60
      template:
        spec:
          containers:
          - name: cronjob-ctr
            image: busybox
            args:
            - /bin/sh
            - -c
            - echo Hello World!
          restartPolicy: OnFailure


 kubectl apply -f cronjob.yaml 
 kubectl get job -w
 kubectl get pod -w | grep cron
 kubectl get job 
 kubectl get cronjob 
 kubectl get cm
 nano cm.yaml
 kubectl apply -f cm.yaml
 kubectl get cm
 kubectl describe cm example-configmap
 nano configpod.yaml
 kubectl apply -f configpod.yaml 
 kubectl get pod
 kubectl get pod | grep pod-env
 kubectl exec -it pod-env-var -- bash
 kubectl describe cm example-configmap
 nano configpod.yaml 
 kubecl apply -f configpod.yaml 
 kubectl apply -f configpod.yaml 
 kubectl get pod | grep pod-env
 kubectl exec -it pod-env-var-2 -- bash
 cat configpod.yaml 
 kubectl exec -it pod-env-var-2 -- bash
 kubectl get cm
 kubectl describe cm kube-root-ca.crt
 kubectl get pod
 kubectl descirbe pod myapp-pod    
 kubectl describe pod myapp-pod    
 nano token
 ls
 clear
 cat token 
"This is testing for ConfigMap volume mouting"

 kubectl create cm token-cm --help
 kubectl create cm token-cm --from-file=token
 kubectl get cm
 kubectl describe cm token-cm
 nano configpod.yaml 
apiVersion: v1
kind: Pod
metadata:
 name: pod-env-var-3
spec:
 volumes:
 - name: token-configmap
   configMap:
     name: token-cm
 containers:
 - name: env-var-configmap
   image: nginx:1.7.9
   volumeMounts:
   - name: token-configmap
     mountPath: /var/data

 kubectl apply -f configpod.yaml
 
 kubectl get pod | grep pod-env
 kubectl describe pod pod-env-var-3
 kubectl exec -it pod-env-var-3 -- bash
 cd /var/data/
 ls
 cat token 
 exit

